#!/bin/bash

# Jenkins Security Check Script

echo "=== Jenkins Security Status Check ==="
echo ""

# Test main dashboard access
echo "1. Testing main dashboard access..."
MAIN_STATUS=$(curl -s -w "%{http_code}" -o /dev/null "http://localhost:8080/")
if [ "$MAIN_STATUS" = "200" ]; then
    echo "   ‚ùå WARNING: Main dashboard is publicly accessible!"
else
    echo "   ‚úÖ Main dashboard requires authentication (HTTP $MAIN_STATUS)"
fi

# Test API access
echo "2. Testing API access..."
API_STATUS=$(curl -s -w "%{http_code}" -o /dev/null "http://localhost:8080/api/json")
if [ "$API_STATUS" = "200" ]; then
    echo "   ‚ùå WARNING: API is publicly accessible!"
else
    echo "   ‚úÖ API requires authentication (HTTP $API_STATUS)"
fi

# Test webhook endpoint
echo "3. Testing GitHub webhook endpoint..."
WEBHOOK_STATUS=$(curl -s -w "%{http_code}" -o /dev/null "http://localhost:8080/github-webhook/")
if [ "$WEBHOOK_STATUS" = "405" ]; then
    echo "   ‚úÖ Webhook endpoint accessible (HTTP $WEBHOOK_STATUS - Method Not Allowed is expected)"
elif [ "$WEBHOOK_STATUS" = "200" ]; then
    echo "   ‚úÖ Webhook endpoint accessible (HTTP $WEBHOOK_STATUS)"
else
    echo "   ‚ö†Ô∏è  Webhook endpoint status: HTTP $WEBHOOK_STATUS"
fi

# Check if users exist
echo "4. Checking user accounts..."
if sudo test -d "/var/lib/jenkins/users/" && [ "$(sudo ls -1 /var/lib/jenkins/users/ | grep -v users.xml | wc -l)" -gt 0 ]; then
    echo "   ‚úÖ User accounts are configured"
    echo "   üìã Existing users:"
    sudo cat /var/lib/jenkins/users/users.xml | grep -o '<string>[^<]*</string>' | sed 's/<[^>]*>//g' | grep -v '^$' | sed 's/^/      - /'
else
    echo "   ‚ùå No user accounts found"
fi

echo ""
echo "=== Security Summary ==="
if [ "$MAIN_STATUS" != "200" ] && [ "$API_STATUS" != "200" ]; then
    echo "‚úÖ Jenkins is properly secured for public exposure"
    echo "‚úÖ GitHub webhooks will work (endpoint accessible)"
    echo "‚úÖ Admin access requires login"
else
    echo "‚ùå Jenkins needs additional security configuration"
fi
echo ""

